{"version":3,"sources":["modules/gui.ts","modules/store.ts","components/three/Light.tsx","components/three/Objects.tsx","components/three/TCanvas.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GUIController","_gui","_currentFolderName","_getGui","folderName","gui","_folder","title","folder","folders","find","f","_title","addFolder","_uncontainedName","name","controllers","c","_name","setFolder","addColor","obj","propertyName","rgbScale","displayName","controllerName","addNumericSlider","min","max","step","add","addDropdown","list","addButton","addCheckBox","this","GUI","_instance","undefined","lightState","helper","boxState","color","metalness","roughness","Lights","lightRef","useRef","scene","useThree","useEffect","THREE","current","shadow","camera","visible","instance","useFrame","getObjectByName","intensity","ref","position","castShadow","Objects","boxRef","rotation","x","y","material","set","args","receiveShadow","onPointerEnter","gsap","to","scale","z","duration","ease","onPointerLeave","Math","PI","TCanvas","fov","aspect","window","innerWidth","innerHeight","near","far","dpr","devicePixelRatio","shadows","attach","OrbitControls","Stats","App","className","styles","container","css","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5e2df1c.chunk.js","sourcesContent":["import GUI from 'lil-gui';\r\n\r\nexport class GUIController {\r\n\tprivate static _instance: GUIController | null\r\n\tprivate _gui\r\n\tprivate _currentFolderName: string | undefined\r\n\r\n\tprivate constructor() {\r\n\t\tthis._gui = new GUI()\r\n\t}\r\n\r\n\tstatic get instance() {\r\n\t\tif (!this._instance) {\r\n\t\t\tthis._instance = new GUIController()\r\n\t\t}\r\n\t\tthis._instance._currentFolderName = undefined\r\n\t\treturn this._instance\r\n\t}\r\n\r\n\tprivate _getGui = (folderName: string | undefined) => {\r\n\t\tlet gui = this._gui\r\n\t\tif (folderName) {\r\n\t\t\tgui = this._folder(folderName)\r\n\t\t} else if (this._currentFolderName) {\r\n\t\t\tgui = this._folder(this._currentFolderName)\r\n\t\t}\r\n\t\treturn gui\r\n\t}\r\n\r\n\tprivate _folder = (title: string) => {\r\n\t\tlet folder = this._gui.folders.find(f => f._title === title)\r\n\t\tif (!folder) folder = this._gui.addFolder(title)\r\n\t\treturn folder\r\n\t}\r\n\r\n\tprivate _uncontainedName = (gui: GUI, name: string) => {\r\n\t\treturn !gui.controllers.find(c => c._name === name)\r\n\t}\r\n\r\n\tsetFolder = (name: string) => {\r\n\t\tthis._currentFolderName = name\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * add color controls\r\n\t * @reference https://lil-gui.georgealways.com/#Guide#Colors\r\n\t */\r\n\taddColor = (\r\n\t\tobj: object,\r\n\t\tpropertyName: string,\r\n\t\trgbScale?: number | undefined,\r\n\t\tdisplayName?: string | undefined,\r\n\t\tfolderName?: string | undefined\r\n\t) => {\r\n\t\tconst controllerName = displayName ? displayName : propertyName\r\n\t\tconst gui = this._getGui(folderName)\r\n\r\n\t\tif (this._uncontainedName(gui, controllerName)) {\r\n\t\t\tgui.addColor(obj, propertyName, rgbScale).name(controllerName)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * add numeric slider controls\r\n\t * @reference https://lil-gui.georgealways.com/#Guide#Numbers-and-Sliders\r\n\t */\r\n\taddNumericSlider = (\r\n\t\tobj: object,\r\n\t\tpropertyName: string,\r\n\t\tmin: number,\r\n\t\tmax: number,\r\n\t\tstep: number,\r\n\t\tdisplayName?: string | undefined,\r\n\t\tfolderName?: string | undefined\r\n\t) => {\r\n\t\tconst controllerName = displayName ? displayName : propertyName\r\n\t\tconst gui = this._getGui(folderName)\r\n\r\n\t\tif (this._uncontainedName(gui, controllerName)) {\r\n\t\t\tgui.add(obj, propertyName, min, max, step).name(controllerName)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * add dropdown controls\r\n\t * @reference https://lil-gui.georgealways.com/#Guide#Dropdowns\r\n\t */\r\n\taddDropdown = (\r\n\t\tobj: object,\r\n\t\tpropertyName: string,\r\n\t\tlist: string[] | { [key: string]: number },\r\n\t\tdisplayName?: string | undefined,\r\n\t\tfolderName?: string | undefined\r\n\t) => {\r\n\t\tconst controllerName = displayName ? displayName : propertyName\r\n\t\tconst gui = this._getGui(folderName)\r\n\r\n\t\tif (this._uncontainedName(gui, controllerName)) {\r\n\t\t\tgui.add(obj, propertyName, list).name(controllerName)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * add Button controls\r\n\t * @description property given by its property name is a callback method.\r\n\t * @reference https://lil-gui.georgealways.com/#Guide#Saving\r\n\t */\r\n\taddButton = (\r\n\t\tobj: object,\r\n\t\tpropertyName: string,\r\n\t\tdisplayName?: string | undefined,\r\n\t\tfolderName?: string | undefined\r\n\t) => {\r\n\t\tconst controllerName = displayName ? displayName : propertyName\r\n\t\tconst gui = this._getGui(folderName)\r\n\r\n\t\tif (this._uncontainedName(gui, controllerName)) {\r\n\t\t\tgui.add(obj, propertyName).name(controllerName)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * add CheckBox controls\r\n\t * @description property given by its property name is type of boolean.\r\n\t * @reference https://lil-gui.georgealways.com/#Guide#Adding-Controllers\r\n\t */\r\n\taddCheckBox = (\r\n\t\tobj: object,\r\n\t\tpropertyName: string,\r\n\t\tdisplayName?: string | undefined,\r\n\t\tfolderName?: string | undefined\r\n\t) => {\r\n\t\tconst controllerName = displayName ? displayName : propertyName\r\n\t\tconst gui = this._getGui(folderName)\r\n\r\n\t\tif (this._uncontainedName(gui, controllerName)) {\r\n\t\t\tgui.add(obj, propertyName).name(controllerName)\r\n\t\t}\r\n\t}\r\n}\r\n","export const lightState = {\r\n\thelper: false\r\n}\r\n\r\nexport const boxState = {\r\n\tcolor: '#fff',\r\n\tmetalness: 0,\r\n\troughness: 0\r\n}\r\n","import { useEffect, useRef, VFC } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useFrame, useThree } from '@react-three/fiber';\r\nimport { GUIController } from '../../modules/gui';\r\nimport { lightState } from '../../modules/store';\r\n\r\nexport const Lights: VFC = () => {\r\n\tconst lightRef = useRef<THREE.DirectionalLight>(null)\r\n\tconst { scene } = useThree()\r\n\r\n\t// add helper\r\n\tuseEffect(() => {\r\n\t\tconst helper = new THREE.CameraHelper(lightRef.current!.shadow.camera)\r\n\t\thelper.visible = lightState.helper\r\n\t\thelper.name = 'DirectionalLightHelper'\r\n\t\tscene.add(helper)\r\n\t}, [scene])\r\n\r\n\t// add controller\r\n\tconst gui = GUIController.instance.setFolder('Light')\r\n\tgui.addCheckBox(lightState, 'helper')\r\n\r\n\tuseFrame(() => {\r\n\t\tconst helper = scene.getObjectByName('DirectionalLightHelper') as THREE.CameraHelper\r\n\t\thelper.visible = lightState.helper\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ambientLight intensity={0.1} />\r\n\t\t\t<directionalLight\r\n\t\t\t\tref={lightRef}\r\n\t\t\t\tposition={[5, 10, 5]}\r\n\t\t\t\tcastShadow\r\n\t\t\t\tshadow-camera-far={30}\r\n\t\t\t\tshadow-mapSize-width={1024}\r\n\t\t\t\tshadow-mapSize-height={1024}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n","import gsap from 'gsap';\r\nimport { useRef, VFC } from 'react';\r\nimport { Box, Plane } from '@react-three/drei';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { GUIController } from '../../modules/gui';\r\nimport { boxState } from '../../modules/store';\r\n\r\nexport const Objects: VFC = () => {\r\n\tconst boxRef = useRef<THREE.Mesh>(null)\r\n\r\n\t// add controller\r\n\tconst gui = GUIController.instance.setFolder('Box')\r\n\tgui.addColor(boxState, 'color')\r\n\tgui.addNumericSlider(boxState, 'metalness', 0, 1, 0.01)\r\n\tgui.addNumericSlider(boxState, 'roughness', 0, 1, 0.01)\r\n\r\n\tuseFrame(() => {\r\n\t\tboxRef.current!.rotation.x += 0.005\r\n\t\tboxRef.current!.rotation.y += 0.005\r\n\r\n\t\tconst material = boxRef.current!.material as THREE.MeshStandardMaterial\r\n\t\tmaterial.color.set(boxState.color)\r\n\t\tmaterial.metalness = boxState.metalness\r\n\t\tmaterial.roughness = boxState.roughness\r\n\t})\r\n\r\n\tconst handlePointerEnter = () => {\r\n\t\tgsap.to(boxRef.current!.scale, { x: 1.5, y: 1.5, z: 1.5, duration: 1, ease: 'elastic.out(1, 0.3)' })\r\n\t}\r\n\r\n\tconst handlePointerLeave = () => {\r\n\t\tgsap.to(boxRef.current!.scale, { x: 1, y: 1, z: 1, duration: 1, ease: 'elastic.out(1, 0.3)' })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box\r\n\t\t\t\tref={boxRef}\r\n\t\t\t\targs={[1, 1, 1]}\r\n\t\t\t\tposition={[0, 2, 0]}\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tonPointerEnter={handlePointerEnter}\r\n\t\t\t\tonPointerLeave={handlePointerLeave}>\r\n\t\t\t\t<meshStandardMaterial {...boxState} />\r\n\t\t\t</Box>\r\n\t\t\t<Plane args={[10, 10]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow>\r\n\t\t\t\t<meshStandardMaterial />\r\n\t\t\t</Plane>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { Suspense, VFC } from 'react';\r\nimport { Environment, OrbitControls, Stats } from '@react-three/drei';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Lights } from './Light';\r\nimport { Objects } from './Objects';\r\n\r\nexport const TCanvas: VFC = () => {\r\n\treturn (\r\n\t\t<Canvas\r\n\t\t\tcamera={{\r\n\t\t\t\tposition: [0, 3, 8],\r\n\t\t\t\tfov: 50,\r\n\t\t\t\taspect: window.innerWidth / window.innerHeight,\r\n\t\t\t\tnear: 0.1,\r\n\t\t\t\tfar: 2000\r\n\t\t\t}}\r\n\t\t\tdpr={window.devicePixelRatio}\r\n\t\t\tshadows>\r\n\t\t\t{/* scene */}\r\n\t\t\t<color attach=\"background\" args={['#000']} />\r\n\t\t\t{/* camera controller */}\r\n\t\t\t<OrbitControls attach=\"orbitControls\" />\r\n\t\t\t{/* lights */}\r\n\t\t\t<Lights />\r\n\t\t\t{/* objects */}\r\n\t\t\t<Objects />\r\n\t\t\t{/* helper */}\r\n\t\t\t<Stats />\r\n\t\t</Canvas>\r\n\t)\r\n}\r\n","import React, { VFC } from 'react';\nimport { css } from '@emotion/css';\nimport { TCanvas } from './three/TCanvas';\n\nexport const App: VFC = () => {\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<TCanvas />\n\t\t</div>\n\t)\n}\n\nconst styles = {\n\tcontainer: css`\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\toverflow: hidden;\n\t`\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}